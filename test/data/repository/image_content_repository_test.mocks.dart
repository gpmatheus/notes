// Mocks generated by Mockito 5.4.4 from annotations
// in notes/test/data/repository/image_content_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i8;

import 'package:mockito/mockito.dart' as _i1;
import 'package:notes/data/services/file/interfaces/image_file_service_interface.dart'
    as _i6;
import 'package:notes/data/services/file/interfaces/models/imagefile_dto.dart'
    as _i7;
import 'package:notes/data/services/local/interfaces/local_image_content_service.dart'
    as _i2;
import 'package:notes/data/services/local/interfaces/model/content/content_dto.dart'
    as _i5;
import 'package:notes/data/services/local/interfaces/model/content/types/image/imagecontent_dto.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LocalImageContentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalImageContentService extends _i1.Mock
    implements _i2.LocalImageContentService {
  MockLocalImageContentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ImagecontentDto?> createImageContent(
          _i4.ImagecontentDto? content) =>
      (super.noSuchMethod(
        Invocation.method(
          #createImageContent,
          [content],
        ),
        returnValue: _i3.Future<_i4.ImagecontentDto?>.value(),
      ) as _i3.Future<_i4.ImagecontentDto?>);

  @override
  _i3.Future<_i4.ImagecontentDto?> updateImageContent(
    String? contentId,
    _i4.ImagecontentDto? content,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateImageContent,
          [
            contentId,
            content,
          ],
        ),
        returnValue: _i3.Future<_i4.ImagecontentDto?>.value(),
      ) as _i3.Future<_i4.ImagecontentDto?>);

  @override
  _i3.Future<_i5.ContentDto?> getContnetById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getContnetById,
          [id],
        ),
        returnValue: _i3.Future<_i5.ContentDto?>.value(),
      ) as _i3.Future<_i5.ContentDto?>);

  @override
  _i3.Future<List<_i5.ContentDto>> getContents(String? noteId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContents,
          [noteId],
        ),
        returnValue: _i3.Future<List<_i5.ContentDto>>.value(<_i5.ContentDto>[]),
      ) as _i3.Future<List<_i5.ContentDto>>);

  @override
  _i3.Future<bool> deleteTypedContent(String? contentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteTypedContent,
          [contentId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [ImageFileServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageFileServiceInterface extends _i1.Mock
    implements _i6.ImageFileServiceInterface {
  MockImageFileServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i7.ImagefileDto?> saveImage(_i8.File? image) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveImage,
          [image],
        ),
        returnValue: _i3.Future<_i7.ImagefileDto?>.value(),
      ) as _i3.Future<_i7.ImagefileDto?>);

  @override
  _i3.Future<bool> deleteImage(String? fileName) => (super.noSuchMethod(
        Invocation.method(
          #deleteImage,
          [fileName],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i7.ImagefileDto?> substituteImage(
    String? fileName,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #substituteImage,
          [
            fileName,
            path,
          ],
        ),
        returnValue: _i3.Future<_i7.ImagefileDto?>.value(),
      ) as _i3.Future<_i7.ImagefileDto?>);

  @override
  _i3.Future<_i8.File?> getImage(String? fileName) => (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [fileName],
        ),
        returnValue: _i3.Future<_i8.File?>.value(),
      ) as _i3.Future<_i8.File?>);
}
